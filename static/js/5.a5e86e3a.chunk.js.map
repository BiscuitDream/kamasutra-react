{"version":3,"sources":["components/Login/Login.jsx"],"names":["LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","name","component","Input","type","placeholder","validate","required","id","htmlFor","className","styles","commonError","connect","state","isAuth","auth","login","props","to","formData","console","log","email","password","rememberMe"],"mappings":"0HAAA,6FAqCMA,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,EA7BL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,MAChC,OACE,uBAAMC,SAAUF,EAAhB,UACE,4BACE,cAAC,IAAD,CAAOG,KAAK,QACLC,UAAWC,IACXC,KAAK,OACLC,YAAY,QACZC,SAAU,CAACC,SAEpB,4BACE,cAAC,IAAD,CAAON,KAAK,WACLC,UAAWC,IACXC,KAAK,WACLC,YAAY,WACZC,SAAU,CAACC,SAEpB,8BACE,cAAC,IAAD,CAAON,KAAK,aAAaC,UAAWC,IAAOC,KAAK,WAAWI,GAAG,eAC9D,uBAAOC,QAAQ,aAAf,4BAEDV,GAAS,mBAAGW,UAAWC,IAAOC,YAArB,SAAmCb,IAC7C,4BACE,wBAAQK,KAAK,SAAb,2BA+BOS,uBAJS,SAACC,GAAD,MAAY,CAClCC,OAAQD,EAAME,KAAKD,UAGmB,CAACE,WAA1BJ,EAvBD,SAACK,GAOb,OAAIA,EAAMH,OACD,cAAC,IAAD,CAAUI,GAAG,aAIpB,qCACE,uCACA,cAACxB,EAAD,CAAgBK,SAbH,SAACoB,GAChBC,QAAQC,IAAIF,GACZ,IAAOG,EAA+BH,EAA/BG,MAAOC,EAAwBJ,EAAxBI,SAAUC,EAAcL,EAAdK,WACxBP,EAAMD,MAAMM,EAAOC,EAAUC","file":"static/js/5.a5e86e3a.chunk.js","sourcesContent":["import {Field, reduxForm} from \"redux-form\";\nimport {Input} from \"../common/CustomFields/CustomFields\";\nimport {required} from \"../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport styles from '../common/CustomFields/CustomFields.module.css';\n\nconst LoginForm = ({handleSubmit, error}) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <p>\n        <Field name=\"email\"\n               component={Input}\n               type=\"text\"\n               placeholder=\"Email\"\n               validate={[required]} />\n      </p>\n      <p>\n        <Field name=\"password\"\n               component={Input}\n               type=\"password\"\n               placeholder=\"Password\"\n               validate={[required]} />\n      </p>\n      <p>\n        <Field name=\"rememberMe\" component={Input} type=\"checkbox\" id=\"rememberMe\"/>\n        <label htmlFor=\"rememberMe\">remember me</label>\n      </p>\n      {error && <p className={styles.commonError}>{error}</p>}\n      <p>\n        <button type=\"submit\">Login</button>\n      </p>\n    </form>\n  );\n};\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\n\nconst Login = (props) => {\n  const onSubmit = (formData) => {\n    console.log(formData);\n    const {email, password, rememberMe} = formData;\n    props.login(email, password, rememberMe);\n  };\n\n  if (props.isAuth) {\n    return <Redirect to=\"/profile\" />\n  }\n\n  return (\n    <>\n      <h1>Login</h1>\n      <LoginReduxForm onSubmit={onSubmit} />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth\n});\n\nexport default connect(mapStateToProps, {login})(Login);\n"],"sourceRoot":""}