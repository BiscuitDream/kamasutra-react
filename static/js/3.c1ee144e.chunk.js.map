{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","styles","dialog","to","activeClassName","active","name","Message","message","text","maxLength100","maxLength","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","placeholder","validate","required","type","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","elem","messagesElements","messages","dialogsBlock","formValues","console","log","sendNewMessage","newMessageText","compose","connect","dispatch","action","sendNewMessageActionCreator","withAuthRedirect"],"mappings":"6GACAA,EAAOC,QAAU,CAAC,aAAe,8BAA8B,QAAU,yBAAyB,SAAW,4B,oBCA7GD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,6B,oBCA/DD,EAAOC,QAAU,CAAC,QAAU,2B,6GCYbC,EAVI,SAACC,GAClB,IAAMC,EAAI,mBAAeD,EAAME,IAE/B,OACE,oBAAIC,UAAWC,IAAOC,OAAtB,SACE,cAAC,IAAD,CAASC,GAAIL,EAAMM,gBAAiBH,IAAOI,OAA3C,SAAoDR,EAAMS,U,kBCAjDC,EANC,SAACV,GACf,OACE,oBAAIG,UAAWC,IAAOO,QAAtB,SAAgCX,EAAMY,Q,kCCIpCC,EAAeC,YAAU,KAkBzBC,EAAsBC,YAAU,CAACC,KAAM,cAAjBD,EAhBL,SAAChB,GACtB,OACE,uBAAMkB,SAAUlB,EAAMmB,aAAtB,UACE,4BACI,cAACC,EAAA,EAAD,CAAOX,KAAK,iBACLY,UAAWC,IACXC,YAAY,qBACZC,SAAU,CAACC,IAAUZ,OAEhC,4BACE,wBAAQa,KAAK,SAAb,kCAkCOC,EA1BC,SAAC3B,GACf,IAAM4B,EAAQ5B,EAAM6B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAYxB,KAAMwB,EAAKxB,KAAMP,GAAI+B,EAAK/B,IAAS+B,EAAK/B,OAChGgC,EAAmBN,EAAMO,SAASH,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAASrB,KAAMqB,EAAKrB,MAAWqB,EAAK/B,OAOxF,OACE,0BAASC,UAAWC,IAAOgC,aAA3B,UACE,oBAAIjC,UAAWC,IAAO2B,QAAtB,SACGD,IAEH,gCACE,oBAAI3B,UAAWC,IAAO+B,SAAtB,SACGD,IAEH,cAACnB,EAAD,CAAqBG,SAdL,SAACmB,GACrBC,QAAQC,IAAIF,GACZrC,EAAMwC,eAAeH,EAAWI,0B,yBCdrBC,sBACbC,aAhBsB,SAACf,GACvB,MAAO,CACLC,YAAaD,EAAMC,gBAII,SAACe,GAC1B,MAAO,CACLJ,eAAgB,SAACC,GACf,IAAMI,EAASC,YAA4BL,GAC3CG,EAASC,QAObE,IAFaL,CAGbf","file":"static/js/3.c1ee144e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsBlock\":\"Dialogs_dialogsBlock__2Rxz4\",\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"messages\":\"Dialogs_messages__1w_Up\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3tDA2\",\"active\":\"DialogItem_active__2qnc5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1MOXo\"};","import styles from './DialogItem.module.css'\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n  const path = `/dialogs/${props.id}`;\n\n  return (\n    <li className={styles.dialog}>\n      <NavLink to={path} activeClassName={styles.active}>{props.name}</NavLink>\n    </li>\n  );\n};\n\nexport default DialogItem;\n","import styles from './Message.module.css'\n\nconst Message = (props) => {\n  return (\n    <li className={styles.message}>{props.text}</li>  /*prop наверно лучше поменять на text*/\n  );\n};\n\nexport default Message;\n","import styles from './Dialogs.module.css'\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {TextArea} from \"../common/CustomFields/CustomFields\";\nimport {maxLength, required} from \"../../utils/validators/validators\";\n\nconst maxLength100 = maxLength(100);\n\nconst AddMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <p>\n          <Field name=\"newMessageText\"\n                 component={TextArea}\n                 placeholder=\"Enter your message\"\n                 validate={[required, maxLength100]} />\n      </p>\n      <p>\n        <button type=\"submit\">Send message</button>\n      </p>\n    </form>\n  );\n};\n\nconst AddMessageReduxForm = reduxForm({form: 'addMessage'})(AddMessageForm);\n\nconst Dialogs = (props) => {\n  const state = props.dialogsPage;\n\n  const dialogsElements = state.dialogs.map(elem => <DialogItem name={elem.name} id={elem.id} key={elem.id} />);\n  const messagesElements = state.messages.map(elem => <Message text={elem.text} key={elem.id} />)\n\n  const addNewMessage = (formValues) => {\n    console.log(formValues);\n    props.sendNewMessage(formValues.newMessageText);\n  };\n\n  return (\n    <section className={styles.dialogsBlock}>\n      <ul className={styles.dialogs}>\n        {dialogsElements}\n      </ul>\n      <div>\n        <ul className={styles.messages}>\n          {messagesElements}\n        </ul>\n        <AddMessageReduxForm onSubmit={addNewMessage} />\n      </div>\n    </section>\n  );\n};\n\nexport default Dialogs;\n","import React from \"react\";\nimport {sendNewMessageActionCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nconst mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsPage\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => { // TODO переделать просто в объект с акш креэйторами и передавать его в connect\n  return {\n    sendNewMessage: (newMessageText) => {\n      const action = sendNewMessageActionCreator(newMessageText);\n      dispatch(action);\n    }\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);\n"],"sourceRoot":""}